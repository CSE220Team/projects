# EXEC will be the name of the executable file
EXEC = Nameme
# CC is the compiler you are using
CC = gcc
# this flag means "don't link objects into an executable"
CFLAGS = -c

# first you'll have a sector for the executable
# it will include all the objects that make up the executable
$(EXEC): main.o lexer.o list.o
	$(CC) -o $(EXEC) main.o lexer.o list.o
	# it -o designates the name of the output file, followed by the objects that make up the object file.

# the following describe instructions for making the objects required by $(EXEC)
# what's important is that any header file you include in the file your compiling must be listed
# following the colon. That's to say: in order to compile main.o, we need main.h, lexer.h, list.h, main.cpp
# otherwise the object is garbage.
# forgetting any one header file will result in a compile error
main.o: main.h lexer.h list.h main.cpp
	$(CC) $(CFLAGS) main.cpp
# as before, this compiles the object, but with the flag -c, this prevents linking errors on non existent files.

lexer.o: lexer.h list.h lexer.cpp
	$(CC) $(CFLAGS) lexer.cpp

list.o: list.h list.cpp
	$(CC) $(CFLAGS) list.cpp

clean:
	rm *.o
